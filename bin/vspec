#!/bin/bash
# bin/vspec - Driver script to test Vim script
# Version: @@VERSION@@
# Copyright (C) 2009-2012 Kana Natsuno <http://whileimautomaton.net/>
# License: So-called MIT/X license  {{{
#     Permission is hereby granted, free of charge, to any person obtaining
#     a copy of this software and associated documentation files (the
#     "Software"), to deal in the Software without restriction, including
#     without limitation the rights to use, copy, modify, merge, publish,
#     distribute, sublicense, and/or sell copies of the Software, and to
#     permit persons to whom the Software is furnished to do so, subject to
#     the following conditions:
#
#     The above copyright notice and this permission notice shall be included
#     in all copies or substantial portions of the Software.
#
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
#     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
#     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
#     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# }}}

if [ "$#" = '0' ] || [ "$1" = '-h' ] || [ "$1" = '--help' ]
then
  echo "Usage: $0 [{non-standard-runtimepath} ...] {input-script}"
  exit
fi

args=("$@")
driver_script=",,$$.vim"
input_script="${args[$((${#args[@]}- 1))]}"
unset args[$((${#args[@]}- 1))]  # Now holds all {non-standard-runtimepath}s.




cat <<END >"$driver_script"
  function s:main()
    let standard_paths = split(&runtimepath, ',')[1:-2]
    let non_standard_paths = reverse([$(for a in "${args[@]}"
                                        do
                                          printf "'%s'," "$a"
                                        done)])
    let all_paths = copy(standard_paths)
    for i in non_standard_paths
      let all_paths = [i] + all_paths + [i . '/after']
    endfor
    let &runtimepath = join(all_paths, ',')

    1 verbose call vspec#test('$input_script')
    qall!
  endfunction
  call s:main()
END

vim -u NONE -i NONE -N -e -s -S "$driver_script" 2>&1




rm -f "$driver_script"

# __END__
# vim: foldmethod=marker
